@layer utilities {
	/*
    aliases.css (Phase 1: v3 bridge, non-breaking)

    - Provides minimal utility aliases that map to semantic CSS variables.
    - Safe under Tailwind v3 and prepares for Tailwind v4 token usage.
    - Does NOT override existing v2 variables. Uses graceful fallbacks to current theme vars.
    - Temporary: remove after full migration to v4 tokens + semantic utilities.
  */

	/* Text */
	.text-text {
		color: var(--color-text) !important;
	}
	/* Accent text/background/border utilities */
	.text-accent {
		color: var(--color-accent, #0087f6) !important;
	}
	.bg-accent {
		background-color: var(--color-accent, #0087f6) !important;
	}
	.border-accent {
		border-color: var(--color-accent, #0087f6) !important;
	}
	.text-accent-muted {
		color: var(
			--color-accent-muted,
			color-mix(in srgb, var(--color-accent, #0087f6) 60%, transparent)
		) !important;
	}
	/* Secondary text (maps to semantic --color-text-secondary) */
	.text-secondary {
		color: var(
			--color-text-secondary,
			var(--color-text-muted, var(--color-text))
		) !important;
	}

	/* Container helper for explanatory copy */
	.prose-secondary :is(p, li, small, span) {
		color: var(
			--color-text-secondary,
			var(--color-text-muted, var(--color-text))
		) !important;
	}
	.text-inverse {
		color: var(--color-text-inverse, var(--color-white, #fff)) !important;
	}
	/* Hover variants (limited set for migration) */
	.hover\:text-text:hover {
		color: var(--color-text) !important;
	}
	.hover\:text-inverse:hover {
		color: var(--color-text-inverse, var(--color-white, #fff)) !important;
	}

	/* Focus and active variants (limited set for migration) */
	.focus\:text-text:focus {
		color: var(--color-text) !important;
	}
	.focus\:text-inverse:focus {
		color: var(--color-text-inverse, var(--color-white, #fff)) !important;
	}
	.active\:text-text:active {
		color: var(--color-text) !important;
	}
	.active\:text-inverse:active {
		color: var(--color-text-inverse, var(--color-white, #fff)) !important;
	}

	/* Hover opacity variants (limited set for migration) */
	.hover\:text-text\/20:hover {
		color: color-mix(in srgb, var(--color-text) 20%, transparent) !important;
	}
	.hover\:text-text\/40:hover {
		color: color-mix(in srgb, var(--color-text) 40%, transparent) !important;
	}
	.hover\:text-text\/60:hover {
		color: color-mix(in srgb, var(--color-text) 60%, transparent) !important;
	}
	.hover\:text-text\/80:hover {
		color: color-mix(in srgb, var(--color-text) 80%, transparent) !important;
	}
	.hover\:text-inverse\/20:hover {
		color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 20%,
			transparent
		) !important;
	}
	.hover\:text-inverse\/40:hover {
		color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 40%,
			transparent
		) !important;
	}
	.hover\:text-inverse\/60:hover {
		color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 60%,
			transparent
		) !important;
	}
	.hover\:text-inverse\/80:hover {
		color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 80%,
			transparent
		) !important;
	}

	/* Opacity variants for text-text */
	.text-text\/20 {
		color: color-mix(in srgb, var(--color-text) 20%, transparent) !important;
	}
	.text-text\/40 {
		color: color-mix(in srgb, var(--color-text) 40%, transparent) !important;
	}
	.text-text\/60 {
		color: color-mix(in srgb, var(--color-text) 60%, transparent) !important;
	}
	.text-text\/80 {
		color: color-mix(in srgb, var(--color-text) 80%, transparent) !important;
	}

	/* Backgrounds */
	.bg-surface {
		/* prefer semantic --color-surface; fallback to current v2 vars */
		background-color: var(
			--color-surface,
			var(--color-surface-background, var(--color-background))
		) !important;
	}
	.bg-bg {
		background-color: var(--color-bg, var(--color-background)) !important;
	}
	/* Stage canvas background */
	.bg-stage {
		background-color: var(--color-stage-background, var(--color-background)) !important;
	}

	/* Auth page backgrounds */
	.bg-auth {
		background-color: var(--color-auth-background, var(--color-background)) !important;
	}
	.fill-auth-ambient {
		fill: var(--color-auth-ambient-light, #1a2845) !important;
	}
	.fill-auth-watermark {
		fill: var(--color-auth-logo-watermark, rgba(255, 255, 255, 0.05)) !important;
	}

	/* Auth page text colors */
	.text-auth-dark {
		color: var(--color-auth-text-dark, #000) !important;
	}
	.group:hover .group-hover\:text-auth-dark {
		color: var(--color-auth-text-dark, #000) !important;
	}
	.group:hover span svg {
		color: var(--color-auth-text-dark, #000) !important;
		fill: var(--color-auth-text-dark, #000) !important;
	}
	.bg-auth-dark {
		background-color: var(--color-auth-bg-dark, #000) !important;
	}
	.hover\:bg-auth-dark:hover {
		background-color: var(--color-auth-bg-dark, #000) !important;
	}
	.hover\:text-blue-pale:hover {
		color: var(--color-blue-pale, #c3dcf8) !important;
	}
	.hover\:text-auth-dark:hover {
		color: var(--color-auth-text-dark, #000) !important;
	}
	.hover\:bg-blue-pale:hover {
		background-color: var(--color-blue-pale, #c3dcf8) !important;
	}
	.hover\:text-blue-pale:hover {
		color: var(--color-blue-pale, #c3dcf8) !important;
	}
	.hover\:border-auth-dark:hover {
		border-color: var(--color-auth-bg-dark, #000) !important;
	}

	/* Text from semantic background tokens */
	.text-bg {
		color: var(--color-bg, var(--color-background)) !important;
	}
	.hover\:text-bg:hover {
		color: var(--color-bg, var(--color-background)) !important;
	}
	.bg-inverse {
		background-color: var(--color-text-inverse, var(--color-white, #fff)) !important;
	}
	.bg-inverse\/5 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 5%,
			transparent
		) !important;
	}
	.bg-inverse\/10 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 10%,
			transparent
		) !important;
	}

	/* Hover/Focus/Active variants for inverse backgrounds */
	.hover\:bg-inverse\/10:hover {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 10%,
			transparent
		) !important;
	}
	.focus-visible\:bg-inverse\/10:focus-visible,
	.focus\:bg-inverse\/10:focus {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 10%,
			transparent
		) !important;
	}
	.active\:bg-inverse\/15:active {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 15%,
			transparent
		) !important;
	}
	.bg-inverse\/15 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 15%,
			transparent
		) !important;
	}
	.bg-inverse\/20 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 20%,
			transparent
		) !important;
	}
	.bg-inverse\/30 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 30%,
			transparent
		) !important;
	}

	/* Borders */
	.border-border {
		border-color: var(
			--color-border,
			var(--color-border-variant, var(--color-dark-border))
		) !important;
	}
	.border-border-muted {
		border-color: var(
			--color-border-muted,
			var(--color-light-border, var(--color-border))
		) !important;
	}

	/* Inverse border helpers (align to text-inverse) */
	.border-inverse {
		border-color: var(--color-text-inverse, var(--color-white, #fff)) !important;
	}
	.border-inverse\/20 {
		border-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 20%,
			transparent
		) !important;
	}

	/* Compatibility alias: keep existing class name working */
	.color-border-focused {
		border-color: var(--color-border-focused, var(--color-focused, #47679e)) !important;
	}

	/* Focus / Ring / Outline */
	.ring-focused {
		/* Tailwind v3 ring color hook */
		--tw-ring-color: var(--color-focused, var(--color-border-focused, #47679e)) !important;
	}
	.outline-focused {
		outline-color: var(--color-focused, var(--color-border-focused, #47679e)) !important;
	}

	/* SVG helpers */
	.fill-text {
		fill: var(--color-text) !important;
	}
	.stroke-border {
		stroke: var(
			--color-border,
			var(--color-border-variant, var(--color-dark-border))
		) !important;
	}

	/* Inverse background (migration helpers) */
	.bg-inverse\/5 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 5%,
			transparent
		) !important;
	}
	.bg-inverse\/10 {
		background-color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 10%,
			transparent
		) !important;
	}

	/* Link muted explicit color */
	.text-link-muted {
		color: var(--color-link-muted) !important;
	}
	/* Link accent explicit color */
	.text-link-accent {
		color: var(--color-link-accent, #1663f3) !important;
	}
	.hover\:text-link-accent:hover {
		color: var(--color-link-accent-hover, #0f4cd1) !important;
	}

	/* Toolbar background gradient (playground main toolbar) */
	.bg-toolbar-gradient {
		/* Solid fallback if vars/gradients fail */
		background-color: var(--toolbar-gradient-base, hsla(218, 58%, 21%, 0.9)) !important;
		background-image: linear-gradient(
			to bottom right,
			var(--toolbar-gradient-from, hsla(232, 37%, 72%, 0.2)),
			var(--toolbar-gradient-to, hsla(218, 58%, 21%, 0.9))
		) !important;
	}

	/* Chat specific (fallbacks keep current visual) */
	.bg-chat-bubble-accent {
		background-color: var(
			--color-chat-bubble-accent-bg,
			rgba(107, 143, 240, 0.2)
		) !important;
	}
	.border-chat-bubble-accent {
		border-color: var(
			--color-chat-bubble-accent-border,
			rgba(107, 143, 240, 0.8)
		) !important;
	}
	.shadow-chat-bubble-accent {
		/* Use var() with full composite value fallback to satisfy multi-shadow syntax */
		box-shadow: var(
			--shadow-chat-bubble-accent,
			0 0 10px rgba(107, 143, 240, 0.3),
			0 0 20px rgba(107, 143, 240, 0.2),
			inset 0 0 20px rgba(107, 143, 240, 0.1)
		) !important;
	}

	/* User bubble tokenized utilities */
	.bg-chat-bubble-user {
		background-color: var(--color-chat-bubble-user-bg, #4a6fd8) !important;
	}
	.shadow-chat-bubble-user {
		box-shadow: var(--shadow-chat-bubble-user, 0 1px 2px 0 rgb(0 0 0 / 0.05)) !important;
	}
	.bg-chat-input {
		background-color: var(
			--color-chat-input-bg,
			color-mix(in srgb, var(--color-bg, #00020b) 80%, transparent)
		) !important;
	}
	.border-chat-input {
		border-color: var(--color-chat-input-border, rgba(255, 255, 255, 0.2)) !important;
	}
	.ring-chat-input {
		--tw-ring-color: var(--color-chat-input-ring, var(--color-accent, #6b8ff0)) !important;
	}
	.placeholder\:text-inverse\/40::placeholder {
		color: color-mix(
			in srgb,
			var(--color-text-inverse, var(--color-white, #fff)) 40%,
			transparent
		) !important;
	}

	/* Blue palette utilities */
	.text-blue-light {
		color: var(--color-blue-light, #b8e8f4) !important;
	}
	.text-blue-pale {
		color: var(--color-blue-pale, #c3dcf8) !important;
	}
	.text-blue-muted {
		color: var(--color-blue-muted, #839dc3) !important;
	}
	.bg-blue-light {
		background-color: var(--color-blue-light, #b8e8f4) !important;
	}
	.bg-blue-pale {
		background-color: var(--color-blue-pale, #c3dcf8) !important;
	}
	.bg-blue-muted {
		background-color: var(--color-blue-muted, #839dc3) !important;
	}
	.border-blue-light {
		border-color: var(--color-blue-light, #b8e8f4) !important;
	}
	.border-blue-pale {
		border-color: var(--color-blue-pale, #c3dcf8) !important;
	}
	.border-blue-muted {
		border-color: var(--color-blue-muted, #839dc3) !important;
	}

	/* Placeholder variant for link-muted */
	.placeholder\:text-link-muted::placeholder {
		color: var(--color-link-muted) !important;
	}

	/* Layout tokens */
	.h-header {
		height: var(--height-header) !important;
	}
	.px-page {
		padding-left: var(--spacing-page-horizontal) !important;
		padding-right: var(--spacing-page-horizontal) !important;
	}
	.w-logo {
		width: var(--width-logo) !important;
	}

	/* Nav glow effect */
	.nav-glow {
		text-shadow: 0px 0px 20px var(--color-accent) !important;
	}

	/* Interactive icon hover */
	.hover\:text-icon-hover:hover {
		color: var(--color-icon-hover) !important;
	}
	.hover\:fill-icon-hover:hover {
		fill: var(--color-icon-hover) !important;
	}
}
