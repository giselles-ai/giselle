import Link from "next/link";
import type { Act } from "../object";
import { Nav } from "./ui/nav";

const actData: Act = {
	id: "act-1",
	sequences: [
		{
			id: "seq-1",
			name: "Sequence 1",
			count: 4,
			status: "success",
			steps: [
				{
					id: "step-1-1",
					text: "Generate Query",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-1-2",
					text: "Ingest",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-1-3",
					text: "Search",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-1-4",
					text: "Analyze",
					status: "success",
					generationId: "gnr-1234567890",
				},
			],
		},
		{
			id: "seq-2",
			name: "cyberpunk_roguelike_sy",
			count: 1,
			status: "in-progress",
			steps: [
				{
					id: "step-2-1",
					text: "Initialize",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-2-2",
					text: "Process",
					status: "in-progress",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-2-3",
					text: "Complete",
					status: "pending",
					generationId: "gnr-1234567890",
				},
			],
		},
		{
			id: "seq-3",
			name: "futuristic_sword_slash",
			count: 1,
			status: "failed",
			steps: [
				{
					id: "step-3-1",
					text: "Load Assets",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-3-2",
					text: "Generate Sound",
					status: "failed",
					generationId: "gnr-1234567890",
				},
			],
		},
		{
			id: "seq-4",
			name: "player_damage_sound_effect-",
			count: 1,
			status: "pending",
			steps: [],
		},
		{
			id: "seq-5",
			name: "drone_destruction_sound_effect",
			count: 1,
			status: "warning",
			steps: [
				{
					id: "step-5-1",
					text: "Analyze",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-5-2",
					text: "Synthesize",
					status: "warning",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-5-3",
					text: "Export",
					status: "pending",
					generationId: "gnr-1234567890",
				},
			],
		},
		{
			id: "seq-6",

			name: "digital_dash_blink_sound_effect",
			count: 1,
			status: "success",
			steps: [
				{
					id: "step-6-1",
					text: "Setup",
					status: "success",
					generationId: "gnr-1234567890",
				},
				{
					id: "step-6-2",
					text: "Render",
					status: "success",
					generationId: "gnr-1234567890",
				},
			],
		},
	],
};

async function fetchAct(_actId: string) {
	await new Promise((resolve) => setTimeout(resolve, 1000));
	return actData;
}

export default async function ({
	children,
	params,
}: React.PropsWithChildren<{
	params: Promise<{ actId: string }>;
}>) {
	const { actId } = await params;
	const act = await fetchAct(actId);
	return (
		<div className="bg-background text-foreground min-h-screen flex flex-col font-sans">
			<div className="flex-grow flex">
				{/* Left Sidebar */}
				<aside className="w-[300px] bg-sidebar flex flex-col py-2 px-[24px] border-r border-border space-y-4 bg-surface-background">
					<div className="-ml-[24px]">
						<Link href="/stage">Back</Link>
					</div>

					<div className="rounded-lg space-y-3">
						<div className="flex items-start gap-3">
							<h2>Create pull request</h2>
						</div>
						{/* <div className="flex bg-secondary rounded-md p-1 text-sm">
							<button className="flex-1 text-muted-foreground py-1 px-2 rounded">
								Steps
							</button>
							<button className="flex-1 bg-card text-foreground py-1 px-2 rounded-md shadow-sm">
								Sources
							</button>
						</div> */}
					</div>

					<div className="flex-grow space-y-2 overflow-y-auto">
						{/* <div className="flex justify-between items-center px-2 py-1">
							<h3 className="text-xs font-medium text-muted-foreground uppercase tracking-wider">
								Files generated by the Agent
							</h3>
							<div className="flex items-center gap-2">
								<File size={14} className="text-muted-foreground" />
								<span className="text-xs font-semibold bg-secondary px-2 py-0.5 rounded-md">
									19
								</span>
							</div>
						</div> */}
						<Nav act={act} />
					</div>

					<div className="flex items-center justify-between p-2 border-t border-border">
						<div className="flex items-center gap-3">
							<img
								src="/placeholder.svg?width=40&height=40"
								alt="User Avatar"
								className="w-10 h-10 rounded-full"
							/>
							<div>
								<p className="font-semibold">toyamarinyon</p>
								<p className="text-xs text-muted-foreground">
									Subscription & Settings
								</p>
							</div>
						</div>
						<button
							type="button"
							className="bg-accent/20 text-accent text-xs font-bold py-1 px-3 rounded-full border border-accent"
						>
							TRIAL
						</button>
					</div>
				</aside>

				<main className="flex-1 flex flex-col">{children}</main>
			</div>
		</div>
	);
}
